REV60
aggiungere classi partial anche per le classi


REV 56
//to do sostiture nelle query il ?XX? con @XX
//=?marcaTempo?"; con =@marcaTempo"; 


to do per il driver mysqlDriverCS non esiste il metodo addWhithValue usare
 String query = "SELECT * FROM tb0024 WHERE  idProdotto=@idProdotto AND Marcatempo=@Marcatempo";
                MySQLCommand command = new MySQLCommand(query, dbConnector.Connessione);

                MySQLParameter Par_idProdotto = new MySQLParameter("@idProdotto",idProdotto);
                command.Parameters.Add(Par_idProdotto);

                MySQLParameter Par_Marcatempo = new MySQLParameter("@idProdotto", Marcatempo);
                command.Parameters.Add(Par_Marcatempo);
             
             es 2
             
              public int delete_RigaConto(RigaConto varToDelete)
        {
            int retVal = 0;
            CultureInfo info = Thread.CurrentThread.CurrentCulture;
            Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo("en-GB");
            try
            {
                String query = "DELETE FROM tb0024 ";
                query += "WHERE ";
                query += "idProdotto = @idProdotto_Param";
                query += " AND ";
                query += "Marcatempo = @Marcatempo_Param";

                MySQLCommand command = new MySQLCommand(query);
                command.Connection = dbConnector.Connessione;

                MySQLParameter Par_idProdotto = new MySQLParameter("@idProdotto_Param", varToDelete.idProdotto);

                command.Parameters.Add(Par_idProdotto);
                MySQLParameter Par_Marcatempo = new MySQLParameter("@Marcatempo_Param", varToDelete.Marcatempo);
                command.Parameters.Add(Par_Marcatempo);

                command.Prepare();
                retVal = command.ExecuteNonQuery();
            }
            catch (MySQLException ex)
            {
                throw (ex);
            }
            finally
            {
                Thread.CurrentThread.CurrentCulture = info;
            }
            return retVal;
        }


21/04/2009
modificare update
delete 
in modo che la query venga fatta sempre con la prepare()



//inserire il reset nelle classi manger
//public void reset()
//        {
//            this._idkey = default( String );
//            this._descriptions = default(String);
//            this._numericValue = default( decimal );
//            this._characterValue = default( String );
//            this._note = default( String );
//            this._timestamp= default( Double );
//        }

fare manager come partial class di mysqlManager

//this._Notes = reader.GetValue(reader.GetOrdinal("Notes")) == DBNull.Value ? null : (string)reader.GetValue(reader.GetOrdinal("Notes"));
//this._Timestamp = reader.GetValue(reader.GetOrdinal("Timestamp")) == DBNull.Value ? 0 : (double)reader.GetValue(reader.GetOrdinal("Timestamp"));
				
//inserire anche nella select add whith parameter
//String query="SELECT * FROM tbconfigurations WHERE  key='?key?";//" + key + "'";
//				MySqlCommand command = new MySqlCommand(query,this._connection);
//                command.Parameters.AddWithValue("?key?", key);
		
//inserire il reader.close nel finally dove stanno i reader

//Warning	53	'MySql.Data.MySqlClient.MySqlParameterCollection.Add(string, object)' 
//is obsolete: 'Add(String parameterName, Object value) has been deprecated. 
// Use AddWithValue(String parameterName, Object value)'	
// h:\progetti\trapanarella\trunk\trapanarella\trapanarella\table\manager\manager_tbsensors.cs	
 

//controlllare il tipo driver

//controllare la conversione da tipo

//controllare this._connection.open() manca il punto e virgola

generazione della classe dbConnector.cs e SqlManager.cs vedi nella cartella 

nella creazione della classe manager inserire gli user
	using System.Globalization;
	using System.Threading;
	using System.Data;
	
	using *.Table.Mapping;

//gestire tipo di driver nelle funzioni insert, delete etc 

//controllare construttore con parametri 

//resettare variabili prima di utilizzarle (creare due classi)

//Controllare se esiste una versione più recente

//nella creazione del summary "MySQL Data Base Table Modellator"
//fare un replace di \n con \n\t///


//i parametri pasati nella defiziione delle fuzione es
//public TipologieMovimento_tb0028(String MMG_MOVIM, String MMG_D_MOV, RIFERIMENTO MMG_RIFER, ...
// devono essere modfcati in String MMG_MOVIM_PARAM  ....

		
		
Funzioni base gestione tabelle
INSERT
        public int insertVariazionePrezzi(VariazioniPrezzo_tb0063 Variabile)
        {
            int retVal = 0;
            CultureInfo info = Thread.CurrentThread.CurrentCulture;
            Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo("en-GB");
            try
            {
				String query="INSERT INTO tb0063 (idAzienda,idArticolo,newPrezzoVendita,marcaTempo) VALUES (?idAzienda,?idArticolo,?newPrezzoVendita,?marcaTempo);"
                MySQLCommand nuovaVariabile = new MySQLCommand(query);                
                nuovaVariabile.Connection = dbConnector.Connessione;
                
                nuovaVariabile.Parameters.Add("?idAzienda", DbType.String);
                nuovaVariabile.Parameters["?idAzienda"].Value = Variabile.idAzienda;

                nuovaVariabile.Parameters.Add("?idArticolo", DbType.String);
                nuovaVariabile.Parameters["?idArticolo"].Value = Variabile.idArticolo;

                nuovaVariabile.Parameters.Add("?newPrezzoVendita", DbType.Double);
                nuovaVariabile.Parameters["?newPrezzoVendita"].Value = Variabile.newPrezzoVendita;

                nuovaVariabile.Parameters.Add("?marcaTempo", DbType.Double);
                nuovaVariabile.Parameters["?marcaTempo"].Value = Variabile.marcaTempo;
                nuovaVariabile.Prepare();
                retVal = nuovaVariabile.ExecuteNonQuery();
            }
            catch (MySQLException ex)
            {
                throw (ex);
            }
            finally
            {
                Thread.CurrentThread.CurrentCulture = info;
            }
            return retVal;
        }
DELETE
        public int deleteVariazionePrezzi(VariazioniPrezzo_tb0063 Variabile)
        {
            int retVal = 0;
            CultureInfo info = Thread.CurrentThread.CurrentCulture;
            Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo("en-GB");
            try
            {
				String query="DELETE FROM tb0063 WHERE idArticolo='" + Variabile.idArticolo + "' AND idAzienda='" + Variabile.idAzienda + "' AND marcaTempo=" + Variabile.marcaTempo;
                MySQLCommand command = new MySQLCommand(query);
                command.Connection = dbConnector.Connessione;
                retVal = command.ExecuteNonQuery();
            }
            catch (MySQLException ex)
            {
                throw (ex);
            }
            finally
            {
                Thread.CurrentThread.CurrentCulture = info;
            }
            return retVal;
        }

UPDATE
view http://forums.asp.net/t/1296374.aspx
        public int updateVariazionePrezzi(VariazioniPrezzo_tb0063 Variabile)
        {
            int retVal = 0;
            CultureInfo info = Thread.CurrentThread.CurrentCulture;
            Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo("en-GB");

            try
            {
                //gestioneTimestamp.getTimeStamp().ToString(CultureInfo.GetCultureInfo("en-GB").NumberFormat)
                MySQLCommand command = new MySQLCommand("UPDATE tb0063 SET newPrezzoVendita=" + Variabile.newPrezzoVendita + ", marcaTempo=" + gestioneTimestamp.getTimeStamp() + " WHERE idArticolo='" + Variabile.idArticolo + "' AND idAzienda='" + Variabile.idAzienda + "'  AND marcaTempo=" + Variabile.marcaTempo);
                command.Connection = dbConnector.Connessione;
                retVal = command.ExecuteNonQuery();
            }
            catch (MySQLException ex)
            {
                throw (ex);
            }
            finally
            {
                Thread.CurrentThread.CurrentCulture = info;
            }
            return retVal;
        }

GET LIST ENTRY
        public List<VariazioniPrezzo_tb0063> getAllVariazionePrezzi(String idAzienda)
        {
            List<VariazioniPrezzo_tb0063> items = new List<VariazioniPrezzo_tb0063>();
            CultureInfo info = Thread.CurrentThread.CurrentCulture;
            Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo("en-GB");
            try
            {
                MySQLCommand command = new MySQLCommand("SELECT * FROM TB0063 WHERE idAzienda=\"" + idAzienda + "\"");
                command.Connection = dbConnector.Connessione;
                MySQLDataReader reader = command.ExecuteReaderEx();
                if (reader.HasRows)
                {
                    while (reader.Read())
                    {
                        items.Add(new VariazioniPrezzo_tb0063(reader));
                    }
                }
            }
            catch (MySQLException ex)
            {
                throw (ex);
            }
            finally
            {
                Thread.CurrentThread.CurrentCulture = info;
            }
            return items;
        }

GET ENTRY
        public VariazioniPrezzo_tb0063 getVariazionePrezzi(String idArticolo, String idAzienda)
        {
            VariazioniPrezzo_tb0063 item = null;
            CultureInfo info = Thread.CurrentThread.CurrentCulture;
            Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo("en-GB");
            try
            {
                MySQLCommand cmd = new MySQLCommand("SELECT * FROM fursol_gestionale.tb0063 WHERE idArticolo=\"" + idArticolo + "\" AND idAzienda=\"" + idAzienda + "\"");
                cmd.Connection = dbConnector.Connessione;
                MySQLDataReader reader = cmd.ExecuteReaderEx();

                if (reader.HasRows)
                    if (reader.Read())
                    {
                        item = new VariazioniPrezzo_tb0063(reader);
                    }
            }
            catch (MySQLException ex)
            {
                throw (ex);
            }
            finally
            {
                Thread.CurrentThread.CurrentCulture = info;
            }
            return item;
        }